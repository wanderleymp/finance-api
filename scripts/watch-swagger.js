const chokidar = require('chokidar');
const path = require('path');
const { exec } = require('child_process');
const { debounce } = require('lodash');

const modulesPath = path.join(__dirname, '../src/modules');

// Fun√ß√£o para gerar a documenta√ß√£o
const generateDocs = () => {
    console.log('\nüîÑ Detectada altera√ß√£o na documenta√ß√£o, regenerando...');
    exec('node scripts/generate-swagger.js', (error, stdout, stderr) => {
        if (error) {
            console.error('‚ùå Erro ao gerar documenta√ß√£o:', error);
            return;
        }
        if (stderr) {
            console.error('‚ö†Ô∏è Avisos:', stderr);
        }
        console.log(stdout);
        console.log('‚úì Documenta√ß√£o atualizada com sucesso!');
    });
};

// Debounce para evitar m√∫ltiplas gera√ß√µes simult√¢neas
const debouncedGenerate = debounce(generateDocs, 1000);

// Inicializa o watcher
console.log('üëÄ Monitorando altera√ß√µes na documenta√ß√£o...');
console.log(`üìÅ Pasta monitorada: ${modulesPath}/**/docs/*.yaml`);

chokidar
    .watch(`${modulesPath}/**/docs/*.yaml`, {
        ignored: /(^|[\/\\])\../,
        persistent: true
    })
    .on('change', (path) => {
        console.log(`üìù Arquivo alterado: ${path}`);
        debouncedGenerate();
    })
    .on('error', error => console.error(`Erro no watcher: ${error}`));

// Gera documenta√ß√£o inicial
generateDocs();
