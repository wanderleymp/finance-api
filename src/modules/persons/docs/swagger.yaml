openapi: 3.0.0
paths:
  /persons:
    get:
      tags:
        - Pessoas
      summary: Lista todas as pessoas
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número da página
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
        - in: query
          name: search
          schema:
            type: string
          description: Busca por nome, nome fantasia ou documento
        - in: query
          name: type
          schema:
            type: string
            enum: [PF, PJ]
          description: Tipo de pessoa (PF ou PJ)
      responses:
        '200':
          description: Lista de pessoas
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Person'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - Pessoas
      summary: Cria uma nova pessoa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePerson'
      responses:
        '201':
          description: Pessoa criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /persons/{id}:
    get:
      tags:
        - Pessoas
      summary: Obtém uma pessoa pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da pessoa
      responses:
        '200':
          description: Pessoa encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    put:
      tags:
        - Pessoas
      summary: Atualiza uma pessoa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da pessoa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePerson'
      responses:
        '200':
          description: Pessoa atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    delete:
      tags:
        - Pessoas
      summary: Remove uma pessoa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da pessoa
      responses:
        '204':
          description: Pessoa removida com sucesso

  /persons/{id}/details:
    get:
      tags:
        - Pessoas
      summary: Obtém os detalhes completos de uma pessoa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID da pessoa
      responses:
        '200':
          description: Detalhes da pessoa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetails'

  /persons/cnpj:
    post:
      tags:
        - Pessoas
      summary: Cria ou atualiza uma pessoa por CNPJ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cnpj
              properties:
                cnpj:
                  type: string
                  description: CNPJ da pessoa jurídica
      responses:
        '200':
          description: Pessoa criada/atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /persons/{personId}/documents:
    get:
      tags:
        - Documentos
      summary: Lista os documentos de uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
      responses:
        '200':
          description: Lista de documentos
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - Documentos
      summary: Adiciona um documento a uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDocument'
      responses:
        '201':
          description: Documento adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'

  /persons/{personId}/contacts:
    get:
      tags:
        - Contatos
      summary: Lista os contatos de uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Número da página
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Itens por página
        - in: query
          name: search
          schema:
            type: string
          description: Busca por nome do contato, valor do contato ou tipo de contato
      responses:
        '200':
          description: Lista de contatos
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - Contatos
      summary: Adiciona um contato a uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContact'
      responses:
        '201':
          description: Contato adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'

  /persons/{personId}/addresses:
    get:
      tags:
        - Endereços
      summary: Lista os endereços de uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
      responses:
        '200':
          description: Lista de endereços
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
    post:
      tags:
        - Endereços
      summary: Adiciona um endereço a uma pessoa
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
          description: ID da pessoa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddress'
      responses:
        '201':
          description: Endereço adicionado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'

components:
  schemas:
    Person:
      type: object
      properties:
        person_id:
          type: integer
          description: ID da pessoa
        full_name:
          type: string
          description: Nome completo
        fantasy_name:
          type: string
          description: Nome fantasia (para PJ)
        birth_date:
          type: string
          format: date
          description: Data de nascimento/fundação
        type:
          type: string
          enum: [PF, PJ]
          description: Tipo de pessoa
        created_at:
          type: string
          format: date-time
          description: Data de criação
        updated_at:
          type: string
          format: date-time
          description: Data de atualização

    PersonDetails:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            documents:
              type: array
              items:
                $ref: '#/components/schemas/Document'
            contacts:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/Address'

    CreatePerson:
      type: object
      required:
        - full_name
        - type
      properties:
        full_name:
          type: string
          description: Nome completo
        fantasy_name:
          type: string
          description: Nome fantasia (para PJ)
        birth_date:
          type: string
          format: date
          description: Data de nascimento/fundação
        type:
          type: string
          enum: [PF, PJ]
          description: Tipo de pessoa

    UpdatePerson:
      type: object
      properties:
        full_name:
          type: string
          description: Nome completo
        fantasy_name:
          type: string
          description: Nome fantasia (para PJ)
        birth_date:
          type: string
          format: date
          description: Data de nascimento/fundação

    Document:
      type: object
      properties:
        person_document_id:
          type: integer
          description: ID do documento
        person_id:
          type: integer
          description: ID da pessoa
        document_type:
          type: string
          enum: [CPF, CNPJ, RG]
          description: Tipo do documento
        document_value:
          type: string
          description: Valor do documento

    CreateDocument:
      type: object
      required:
        - document_type
        - document_value
      properties:
        document_type:
          type: string
          enum: [CPF, CNPJ, RG]
          description: Tipo do documento
        document_value:
          type: string
          description: Valor do documento

    Contact:
      type: object
      properties:
        contact_id:
          type: integer
          description: ID do contato
        contact_type:
          type: string
          enum: [EMAIL, PHONE, WHATSAPP]
          description: Tipo do contato
        contact_value:
          type: string
          description: Valor do contato
        contact_name:
          type: string
          description: Nome do contato

    CreateContact:
      type: object
      required:
        - contact_type
        - contact_value
      properties:
        contact_type:
          type: string
          enum: [EMAIL, PHONE, WHATSAPP]
          description: Tipo do contato
        contact_value:
          type: string
          description: Valor do contato
        contact_name:
          type: string
          description: Nome do contato

    Address:
      type: object
      properties:
        id:
          type: integer
          description: ID do endereço
        street:
          type: string
          description: Logradouro
        number:
          type: string
          description: Número
        complement:
          type: string
          description: Complemento
        neighborhood:
          type: string
          description: Bairro
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        postal_code:
          type: string
          description: CEP
        country:
          type: string
          description: País
        reference:
          type: string
          description: Referência
        ibge:
          type: integer
          description: Código IBGE
        is_main:
          type: boolean
          description: Se é o endereço principal

    CreateAddress:
      type: object
      required:
        - street
        - number
        - neighborhood
        - city
        - state
        - postal_code
      properties:
        street:
          type: string
          description: Logradouro
        number:
          type: string
          description: Número
        complement:
          type: string
          description: Complemento
        neighborhood:
          type: string
          description: Bairro
        city:
          type: string
          description: Cidade
        state:
          type: string
          description: Estado
        postal_code:
          type: string
          description: CEP
        country:
          type: string
          default: Brasil
          description: País
        reference:
          type: string
          description: Referência
        ibge:
          type: integer
          description: Código IBGE
        is_main:
          type: boolean
          default: false
          description: Se é o endereço principal

    PaginationMeta:
      type: object
      properties:
        totalItems:
          type: integer
          description: Total de itens
        itemCount:
          type: integer
          description: Quantidade de itens na página atual
        itemsPerPage:
          type: integer
          description: Itens por página
        totalPages:
          type: integer
          description: Total de páginas
        currentPage:
          type: integer
          description: Página atual
